name: Build CLI Binaries

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: nocta-ui
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary: nocta-ui
          - os: macos-13
            target: x86_64-apple-darwin
            binary: nocta-ui
          - os: macos-14
            target: aarch64-apple-darwin
            binary: nocta-ui
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary: nocta-ui.exe
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            binary: nocta-ui.exe

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Linux cross linker
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build CLI binary
        run: cargo build --release --package nocta_cli --target ${{ matrix.target }}

      - name: Stage binary in dist folder
        run: |
          mkdir -p js/dist/${{ matrix.target }}
          cp target/${{ matrix.target }}/release/${{ matrix.binary }} js/dist/${{ matrix.target }}/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nocta-ui-${{ matrix.target }}
          path: js/dist/${{ matrix.target }}/
          if-no-files-found: error
